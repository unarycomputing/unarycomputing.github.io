[{"authors":["admin"],"categories":null,"content":"Unary computing is an emerging computing paradigm that differs from conventional binary computing. The data in binary computing have multiple parallel bits, with each of different significance. On the contrary, the data in unary computing are in the form of unary bitstreams, with each of identical significance. Those bitstreams are similar to the spikes in neuromophic computing.\nAccording to the bitstream coding, unary bitstreams can apply either rate coding or temporal coding, which are two fundamental forms in neural coding.\n  Rate-coded unary computing is named stochastic computing. In stochastic computing, multiplication can be performed with a simple AND gate, while addition can be executed with a single OR gate.\n  Temporal-coded unary computing is named race logic. In race logic, an AND gate and an OR gate can perform the minimum and maximum function.\n  As described above, unary computing leverages extremely simple computing logic and is a promising candidate for ultra-low-power applications. Therefore, exploiting unary computing for practical real-world use is the goal here.\n","date":1644624000,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1644624000,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://unarycomputing.github.io/author/unary-computing/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/unary-computing/","section":"authors","summary":"Unary computing is an emerging computing paradigm that differs from conventional binary computing. The data in binary computing have multiple parallel bits, with each of different significance. On the contrary, the data in unary computing are in the form of unary bitstreams, with each of identical significance.","tags":null,"title":"Unary Computing","type":"authors"},{"authors":["Unary Computing","Joshua San Miguel"],"categories":null,"content":"","date":1644624000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1644624000,"objectID":"f74678610968ac3675a85497142a113a","permalink":"https://unarycomputing.github.io/publication/2022-02-12-hpca/","publishdate":"2021-10-28T00:00:00Z","relpermalink":"/publication/2022-02-12-hpca/","section":"publication","summary":"General matrix multiply (GEMM) is an important operation in broad applications, especially the thriving deep neural networks. To achieve low power consumption for GEMM, researchers have already leveraged unary computing, which manipulates bitstreams with extremely simple logic. However, existing unary architectures are not well generalizable to varying GEMM configurations in versatile applications and incompatible to the binary computing stack, imposing challenges to execute unary GEMM effortlessly. In this work, we address the problem by architecting a hybrid unary-binary systolic array, uSystolic, to inherit the legacy-binary data scheduling with slow (thus power-efficient) data movement, i.e., data bytes are crawling out from memory to drive uSystolic. uSystolic exhibits tremendous area and power improvements as a joint effect of 1) low-power computing kernel, 2) spatial-temporal bitstream reuse, and 3) on-chip SRAM elimination. For the evaluated edge computing scenario, compared with the binary parallel design, the rated-coded uSystolic reduces the systolic array area and total on-chip area by 59.0% and 91.3%, with the on-chip energy and power efficiency improved by up to 112.2X and 44.8X for AlexNet.","tags":["Unary Computing","GEMM Architecture","Energy Efficiency","Power Efficiency"],"title":"uSystolic: Byte-Crawling Unary Systolic Array","type":"publication"},{"authors":["Hsuan Hsiao","Joshua San Miguel","Jason Anderson"],"categories":null,"content":"","date":1642377600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642377600,"objectID":"a0251800e1fa38bf348de838bac26ef2","permalink":"https://unarycomputing.github.io/publication/2022-01-17-aspdac/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2022-01-17-aspdac/","section":"publication","summary":"","tags":[],"title":"Streaming Accuracy: Characterizing Early Termination in Stochastic Computing ","type":"publication"},{"authors":[],"categories":[],"content":"More information can be found here and here.\n","date":1635379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635379200,"objectID":"1c107207d86f854c48bb031e26b08b63","permalink":"https://unarycomputing.github.io/news/2021-10-28-hpca/","publishdate":"2021-10-28T00:00:00Z","relpermalink":"/news/2021-10-28-hpca/","section":"news","summary":"More information can be found here and here.","tags":[],"title":"A paper on hybrid unary binary systolic array is accepted in HPCA 2022","type":"news"},{"authors":null,"categories":null,"content":"Design hybrid unary binary architecture to avoid overly large power in fully streaming architecture, which is usually fully parallel.\n","date":1635379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635379200,"objectID":"bdb0d57edca505895dcc1664ca1cdba2","permalink":"https://unarycomputing.github.io/project/arch-hybrid-unary-binary/","publishdate":"2021-10-28T00:00:00Z","relpermalink":"/project/arch-hybrid-unary-binary/","section":"project","summary":"Design hybrid unary binary architecture to avoid overly large power in fully streaming architecture, which is usually fully parallel.","tags":[],"title":"Hybrid Unary Binary Architecture","type":"project"},{"authors":null,"categories":null,"content":"Simulate the performance of unary computing in the context of binary memory system.\n","date":1635379200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635379200,"objectID":"4dfdf52f69bc3d47afd1d2e08c2f0737","permalink":"https://unarycomputing.github.io/project/sim-performance/","publishdate":"2021-10-28T00:00:00Z","relpermalink":"/project/sim-performance/","section":"project","summary":"Simulate the performance of unary computing in the context of binary memory system.","tags":[],"title":"Performance Simulation for Unary Computing","type":"project"},{"authors":[],"categories":[],"content":"More information can be found here.\n","date":1632787200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1632787200,"objectID":"049cb4aa3ef32fb2987716893d339dea","permalink":"https://unarycomputing.github.io/news/2021-09-28-aspdac/","publishdate":"2021-09-28T00:00:00Z","relpermalink":"/news/2021-09-28-aspdac/","section":"news","summary":"More information can be found here.","tags":[],"title":"A paper on characterizing early termination is accepted in ASP-DAC 2022","type":"news"},{"authors":["Di Wu","Jingjie Li","Ruokai Yin","Hsuan Hsiao","Younghyun Kim","Joshua San Miguel"],"categories":null,"content":"","date":1621987200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621987200,"objectID":"ccd666dae9d075b7297d800be331f1ee","permalink":"https://unarycomputing.github.io/publication/2021-03-11-ieee-micro/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-03-11-ieee-micro/","section":"publication","summary":"General matrix multiplication (GEMM) is pervasive in various domains, such as signal processing, computer vision, and machine learning. Conventional binary architectures for GEMM exhibit poor scalability in area and energy efficiency, due to the spatial nature of number representation and computing. On the contrary, unary computing processes data in temporal domain with extremely simple logic. However, to date, there rarely exist efficient architectures for unary GEMM. In this work, we first present uGEMM, a hardware-efficient unary GEMM architecture enabled by universally-compatible arithmetic units, which simultaneously achieves input-insensitivity and high output accuracy. Next, we demonstrate that the proposed uGEMM can reliably early terminate the computation and offers dynamic energy-accuracy scaling for real-world applications via an accuracy-aware metric. Finally, to propel the future research for unary computing, we open source our unary computing simulator, UnarySim.","tags":[],"title":"uGEMM: Unary Computing for GEMM Applications","type":"publication"},{"authors":["Di Wu","Ruokai Yin","Joshua San Miguel"],"categories":null,"content":"","date":1610928000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610928000,"objectID":"bda9facda6b7dd4a563146b12a7c9b72","permalink":"https://unarycomputing.github.io/publication/2021-01-18-aspdac-ns/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-01-18-aspdac-ns/","section":"publication","summary":"Stochastic computing is a statistical computing scheme that represents data as serial bit streams to greatly reduce hardware complexity. The key trade-off is that processing more bits in the streams yields higher computation accuracy at the cost of more latency and energy consumption. To maximize efficiency, it is desirable to account for the error tolerance of applications and terminate stochastic computations early when the result is acceptably accurate. Currently, the stochastic computing community lacks a standard means of measuring a circuit's potential for early termination and predicting at what cycle it would be safe to terminate. To fill this gap, we propose normalized stability, a metric that measures how fast a bit stream converges under a given accuracy budget. Our unit-level experiments show that normalized stability accurately reflects and contrasts the early-termination capabilities of varying stochastic computing units. Furthermore, our application-level experiments on low-density parity-check decoding, machine learning and image processing show that normalized stability can reduce the design space and predict the timing to terminate early.","tags":[],"title":"Normalized Stability: A Cross-Level Design Metric for Early Termination in Stochastic Computing","type":"publication"},{"authors":["Hsuan Hsiao","Joshua San Miguel","Yuko Hara-Azumi","Jason Anderson"],"categories":null,"content":"","date":1610928000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610928000,"objectID":"641cf863a62ee67fa602c7dcb7ce7b64","permalink":"https://unarycomputing.github.io/publication/2021-01-18-aspdac-zce/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-01-18-aspdac-zce/","section":"publication","summary":"Stochastic computing (SC), with its probabilistic data representation format, has sparked renewed interest due to its ability to use very simple circuits to implement complex operations. Though unlike traditional binary computing, SC needs to carefully handle correlations that exist across data values to avoid the risk of unacceptably inaccurate results. With many SC circuits designed to operate under the assumption that input values are independent, it is important to provide the ability to accurately measure and characterize independence of SC bitstreams. We propose zero correlation error (ZCE), a metric that quantifies how independent two finite-length bitstreams are, and show that it addresses fundamental limitations in metrics currently used by the SC community. Through evaluation at both the functional unit level and application level, we demonstrate how ZCE can be an effective tool for analyzing SC bitstreams, simulating circuits and design space exploration.","tags":[],"title":"Zero Correlation Error: A Metric for Finite-Length Bitstream Independence in Stochastic Computing","type":"publication"},{"authors":["Di Wu","Ruokai Yin","Joshua San Miguel"],"categories":null,"content":"","date":1610323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610323200,"objectID":"8c7c722a8f5cb635c8af82ba4728b013","permalink":"https://unarycomputing.github.io/publication/2021-01-11-ieeedt/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2021-01-11-ieeedt/","section":"publication","summary":"Stochastic Computing (SC) has shown great promise in achieving low hardware area and power consumption for neuromorphic architectures compared to traditional binary-encoded computation, due to its bit-serial data representation and extremely straightforward logic. With emerging deep learning models requiring more sophisticated nonlinear operations, we propose new designs for SC division and square root. Our designs are novel in their ability to leverage SC correlation via low-cost in-stream mechanisms that eliminate expensive bit stream regeneration. Our experiments show that, compared to state-of-the-art designs, our proposed division and square root units simultaneously achieve higher accuracy and consume less area.","tags":[],"title":"In-Stream Correlation-Based Division and Bit-Inserting Square Root in Stochastic Computing","type":"publication"},{"authors":[],"categories":[],"content":"This top pick paper is titled \u0026ldquo;uGEMM: Unary Computing for GEMM Applications\u0026rdquo; in the IEEE Micro 2021 special issue on \u0026ldquo;Top Picks from the 2020 Computer Architecture Conferences\u0026rdquo;, which \u0026ldquo;collects some of the most significant research papers in computer architecture based on novelty and potential for long-term impact\u0026rdquo;. And it is an extended work of the previous ISCA'20 paper. More information can be found here.\n","date":1610064000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610064000,"objectID":"e1434bd54bb1f97003b5962938fbe681","permalink":"https://unarycomputing.github.io/news/2021-01-08-ieee-micro-toppicks/","publishdate":"2021-01-08T00:00:00Z","relpermalink":"/news/2021-01-08-ieee-micro-toppicks/","section":"news","summary":"This top pick paper is titled \u0026ldquo;uGEMM: Unary Computing for GEMM Applications\u0026rdquo; in the IEEE Micro 2021 special issue on \u0026ldquo;Top Picks from the 2020 Computer Architecture Conferences\u0026rdquo;, which \u0026ldquo;collects some of the most significant research papers in computer architecture based on novelty and potential for long-term impact\u0026rdquo;.","tags":[],"title":"uGEMM (ISCA'20) is selected as one of twelve IEEE Micro Top Picks for 2020","type":"news"},{"authors":[],"categories":[],"content":"This paper is titled \u0026ldquo;In-Stream Correlation-Based Division and Bit-Inserting Square Root in Stochastic Computing\u0026rdquo; in the IEEE Design \u0026amp; Test 2021 Special Issue on Stochastic Computing for Neuromorphic Architectures. And it is an extended work of the previous DAC'19 paper.\n","date":1609286400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609286400,"objectID":"076d183e081563ac4e6d917860da9da1","permalink":"https://unarycomputing.github.io/news/2020-12-30-ieee-dt/","publishdate":"2020-12-30T00:00:00Z","relpermalink":"/news/2020-12-30-ieee-dt/","section":"news","summary":"This paper is titled \u0026ldquo;In-Stream Correlation-Based Division and Bit-Inserting Square Root in Stochastic Computing\u0026rdquo; in the IEEE Design \u0026amp; Test 2021 Special Issue on Stochastic Computing for Neuromorphic Architectures. And it is an extended work of the previous DAC'19 paper.","tags":[],"title":"A paper on nonlinear SC unit design is accepted in IEEE Design \u0026 Test 2021","type":"news"},{"authors":[],"categories":[],"content":"More information can be found here and here.\n","date":1599868800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1599868800,"objectID":"254d4159682cffb0e31fb54ad556d57b","permalink":"https://unarycomputing.github.io/news/2020-09-12-aspdac/","publishdate":"2020-09-12T00:00:00Z","relpermalink":"/news/2020-09-12-aspdac/","section":"news","summary":"More information can be found here and here.","tags":[],"title":"Two papers on metrics for stochastic computing are accepted in ASPDAC 2021","type":"news"},{"authors":[],"categories":[],"content":"More information can be found here.\n","date":1590796800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590796800,"objectID":"fb57225bb32d639f4dca0927261512e5","permalink":"https://unarycomputing.github.io/news/2020-05-30-isca/","publishdate":"2020-05-30T00:00:00Z","relpermalink":"/news/2020-05-30-isca/","section":"news","summary":"More information can be found here.","tags":[],"title":"A paper on unary GEMM architecture is accepted in ISCA 2020","type":"news"},{"authors":["Di Wu","Jingjie Li","Ruokai Yin","Hsuan Hsiao","Younghyun Kim","Joshua San Miguel"],"categories":null,"content":"","date":1590796800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590796800,"objectID":"4cdeee35c026ea86d69417244524655f","permalink":"https://unarycomputing.github.io/publication/2020-05-30-isca/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2020-05-30-isca/","section":"publication","summary":"General matrix multiplication (GEMM) is universal in various applications, such as signal processing, machine learning, and computer vision. Conventional GEMM hardware architectures based on binary computing exhibit low area and energy efficiency as they scale due to the spatial nature of number representation and computing. Unary computing, on the other hand, can be performed with extremely simple processing units, often just with a single logic gate. But currently there exist no efficient architectures for unary GEMM. In this paper, we present uGEMM, an area- and energy-efficient unary GEMM architecture enabled by novel arithmetic units. The proposed design relaxes previously-imposed constraints on input bit streams—low correlation and long stream length—and achieves superior area and energy efficiency over existing unary systems. Furthermore, uGEMM’s output bit streams exhibit higher accuracy and faster convergence, enabling dynamic energy-accuracy scaling on resource-constrained systems.","tags":[],"title":"uGEMM: Unary Computing Architecture for GEMM Applications","type":"publication"},{"authors":null,"categories":null,"content":"We create UnarySim to simulate the functionality of unary computing in a cycle-accurate manner.\n","date":1561852800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561852800,"objectID":"659da43524d7fc8ccb1f60feaf721e2c","permalink":"https://unarycomputing.github.io/project/sim-function/","publishdate":"2019-06-30T00:00:00Z","relpermalink":"/project/sim-function/","section":"project","summary":"We create UnarySim to simulate the functionality of unary computing in a cycle-accurate manner.","tags":[],"title":"Functional Simulation for Unary Computing","type":"project"},{"authors":[],"categories":[],"content":"More information can be found here.\n","date":1559433600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559433600,"objectID":"64212172ae7fd11b1537723aeecd0f33","permalink":"https://unarycomputing.github.io/news/2019-06-02-dac/","publishdate":"2019-06-02T00:00:00Z","relpermalink":"/news/2019-06-02-dac/","section":"news","summary":"More information can be found here.","tags":[],"title":"A paper on nonlinear SC unit design is accepted in DAC 2019","type":"news"},{"authors":null,"categories":null,"content":"Design unary computing architecture and microarchitecture that does not introduce latency overhead in binary-unary data inter-conversion, so as to maximally overlap the computing at different stages for hardware efficiency. This category of design is usually fully parallel.\n","date":1559433600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559433600,"objectID":"49d8dda136f2b7e6e2b9f23af2e1851f","permalink":"https://unarycomputing.github.io/project/arch-fully-streaming-unary/","publishdate":"2019-06-02T00:00:00Z","relpermalink":"/project/arch-fully-streaming-unary/","section":"project","summary":"Design unary computing architecture and microarchitecture that does not introduce latency overhead in binary-unary data inter-conversion, so as to maximally overlap the computing at different stages for hardware efficiency. This category of design is usually fully parallel.","tags":[],"title":"Fully Streaming Unary Architecture","type":"project"},{"authors":["Di Wu","Joshua San Miguel"],"categories":null,"content":"","date":1559433600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559433600,"objectID":"145da9338e94805f131945eddce5db85","permalink":"https://unarycomputing.github.io/publication/2019-06-02-dac/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/2019-06-02-dac/","section":"publication","summary":"Stochastic Computing (SC) is designed to minimize hardware area and power consumption compared to traditional binary-encoded computation, stemming from the bit-serial data representation and extremely straightforward logic. Though existing Stochastic Computing Units mostly assume uncorrelated bit streams, recent works find that correlation can be exploited for higher accuracy. We propose novel architectures for SC division and square root, which leverage correlation via low-cost in-stream mechanisms that eliminate expensive bit stream regeneration. We also introduce new metrics to better evaluate SC circuits relying on equilibrium via feedback loops. Experiments indicate that our division converges 46.3% faster with both 43.3% lower error and 45.6% less area.","tags":null,"title":"In-Stream Stochastic Division and Square Root via Correlation","type":"publication"}]