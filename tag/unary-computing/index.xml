<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unary Computing | Unary Computing Projects</title>
    <link>https://unarycomputing.github.io/tag/unary-computing/</link>
      <atom:link href="https://unarycomputing.github.io/tag/unary-computing/index.xml" rel="self" type="application/rss+xml" />
    <description>Unary Computing</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 30 Jun 2018 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://unarycomputing.github.io/images/icon_hu2f92d5b25d123590de0ad34a835a1117_925155_512x512_fill_lanczos_center_2.png</url>
      <title>Unary Computing</title>
      <link>https://unarycomputing.github.io/tag/unary-computing/</link>
    </image>
    
    <item>
      <title>Function Simulation for Unary Computing</title>
      <link>https://unarycomputing.github.io/project/sim-function/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/sim-function/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hybrid Unary Binary Architecture</title>
      <link>https://unarycomputing.github.io/project/arch-hybrid-unary-binary/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/arch-hybrid-unary-binary/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Performance Simulation for Unary Computing</title>
      <link>https://unarycomputing.github.io/project/sim-performance/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/sim-performance/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
