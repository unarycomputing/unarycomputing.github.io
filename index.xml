<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unary Computing Projects</title>
    <link>https://unarycomputing.github.io/</link>
      <atom:link href="https://unarycomputing.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Unary Computing Projects</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 08 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://unarycomputing.github.io/images/icon_hu2f92d5b25d123590de0ad34a835a1117_925155_512x512_fill_lanczos_center_2.png</url>
      <title>Unary Computing Projects</title>
      <link>https://unarycomputing.github.io/</link>
    </image>
    
    <item>
      <title>uGEMM (ISCA&#39;20) is selected as one of twelve IEEE Micro Top Picks 2020</title>
      <link>https://unarycomputing.github.io/post/2021-01-08-ieee-micro-toppicks/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/post/2021-01-08-ieee-micro-toppicks/</guid>
      <description>&lt;p&gt;The original &lt;a href=&#34;https://ieeexplore.ieee.org/document/9139000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISCA&#39;20 paper&lt;/a&gt; is summarized &lt;a href=&#34;https://unarycomputing.github.io/publication/2020-05-30-isca/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper on nonlinear unit design is accepted in IEEE Design &amp; Test 2021</title>
      <link>https://unarycomputing.github.io/post/2020-12-30-ieee-dt/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/post/2020-12-30-ieee-dt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ieeexplore.ieee.org/document/9319166&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This paper&lt;/a&gt; is titled &amp;ldquo;In-Stream Correlation-Based Division and Bit-Inserting Square Root in Stochastic Computing&amp;rdquo; in the IEEE Design &amp;amp; Test 2021 Special Issue on Stochastic Computing for Neuromorphic Architectures. And it is an extended work of the previous &lt;a href=&#34;https://unarycomputing.github.io/publication/2019-06-02-dac/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DAC&#39;19 paper&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper on metric-based early termination is accepted in ASP-DAC 2021</title>
      <link>https://unarycomputing.github.io/post/2020-09-12-aspdac/</link>
      <pubDate>Sat, 12 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/post/2020-09-12-aspdac/</guid>
      <description>&lt;p&gt;This paper introduces a novel metric to monitor the accuracy evolution over time, and leverage this metric to early terminate stochastic computing reliably.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper on unary GEMM architecture is accepted in ISCA 2020</title>
      <link>https://unarycomputing.github.io/post/2020-05-30-isca/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/post/2020-05-30-isca/</guid>
      <description>&lt;p&gt;This &lt;a href=&#34;https://ieeexplore.ieee.org/document/9139000&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ISCA&#39;20 paper&lt;/a&gt; is briefly summarized &lt;a href=&#34;https://unarycomputing.github.io/publication/2020-05-30-isca/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>uGEMM: Unary Computing Architecture for GEMM Applications</title>
      <link>https://unarycomputing.github.io/publication/2020-05-30-isca/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/publication/2020-05-30-isca/</guid>
      <description></description>
    </item>
    
    <item>
      <title>uGEMM: Unary Computing Architecture for GEMM Applications</title>
      <link>https://unarycomputing.github.io/resource/2020-05-30-isca/</link>
      <pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/resource/2020-05-30-isca/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fully Streaming Unary Architecture</title>
      <link>https://unarycomputing.github.io/project/arch-fully-streaming/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/arch-fully-streaming/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>In-Stream Stochastic Division and Square Root via Correlation</title>
      <link>https://unarycomputing.github.io/publication/2019-06-02-dac/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/publication/2019-06-02-dac/</guid>
      <description></description>
    </item>
    
    <item>
      <title>In-Stream Stochastic Division and Square Root via Correlation</title>
      <link>https://unarycomputing.github.io/resource/2019-06-02-dac/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/resource/2019-06-02-dac/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Paper on nonlinear unit design is accepted in DAC 2019</title>
      <link>https://unarycomputing.github.io/post/2019-06-02-dac/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/post/2019-06-02-dac/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3316781.3317844&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;This paper&lt;/a&gt; is titled &amp;ldquo;In-Stream Correlation-Based Division and Square Root in Stochastic Computing&amp;rdquo; and briefly summarized &lt;a href=&#34;https://unarycomputing.github.io/publication/2019-06-02-dac/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Function Simulation for Unary Computing</title>
      <link>https://unarycomputing.github.io/project/sim-function/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/sim-function/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hybrid Unary Binary Architecture</title>
      <link>https://unarycomputing.github.io/project/arch-hybrid-unary-binary/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/arch-hybrid-unary-binary/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Performance Simulation for Unary Computing</title>
      <link>https://unarycomputing.github.io/project/sim-performance/</link>
      <pubDate>Sat, 30 Jun 2018 00:00:00 +0000</pubDate>
      <guid>https://unarycomputing.github.io/project/sim-performance/</guid>
      <description>&lt;p&gt;Unary computing applies unary bit streams as internal data, and mitigates the conversion of data from unary to binary in converntional computers, leading to less system-level latency, as in the diagram.
Currently, unary computing has already been applied to low-density parity-check code, image processing and machine learning. We create &lt;a href=&#34;https://github.com/diwu1990/UnarySim&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;UnarySim&lt;/a&gt; to accurately simulate the behavior of unary computing at cycle level.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
